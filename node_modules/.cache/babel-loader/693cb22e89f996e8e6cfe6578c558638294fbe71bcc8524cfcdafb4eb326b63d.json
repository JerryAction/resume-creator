{"ast":null,"code":"const projects = [{\n  id: 1,\n  name: '电商平台前端重构',\n  description: '负责公司核心电商平台的前端重构工作，使用React技术栈构建高性能的用户界面。',\n  technologies: ['React', 'Redux', 'Webpack', 'TailwindCSS'],\n  link: 'https://example.com/project1',\n  github: 'https://github.com/zhangsan/project1',\n  image_url: '',\n  featured: true,\n  start_date: '2023-01-01',\n  end_date: '2023-12-31',\n  team_size: 5,\n  role: '前端技术负责人',\n  achievements: ['优化前端性能，页面加载速度提升40%', '重构核心组件库，提高代码复用率和维护性', '实现响应式设计，支持多端访问']\n}, {\n  id: 2,\n  name: '移动端管理系统',\n  description: '开发移动端管理系统，用于公司内部数据管理和业务处理。',\n  technologies: ['Vue.js', 'Vuex', 'Vant', 'Axios'],\n  link: 'https://example.com/project2',\n  github: 'https://github.com/zhangsan/project2',\n  image_url: '',\n  featured: false,\n  start_date: '2022-01-01',\n  end_date: '2022-12-31',\n  team_size: 3,\n  role: '前端开发工程师',\n  achievements: ['实现核心功能模块，包括数据展示和表单处理', '优化移动端用户体验，提高用户留存率20%', '与后端团队紧密合作，确保数据接口稳定']\n}];\nclass Project {\n  static async list(orderBy = '-start_date') {\n    // 模拟异步操作\n    return new Promise(resolve => {\n      setTimeout(() => {\n        // 简单排序实现\n        const sorted = [...projects].sort((a, b) => {\n          if (orderBy === '-start_date') {\n            return new Date(b.start_date) - new Date(a.start_date);\n          }\n          return 0;\n        });\n        resolve(sorted);\n      }, 100);\n    });\n  }\n  static async create(data) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const newProject = {\n          ...data,\n          id: projects.length + 1\n        };\n        projects.push(newProject);\n        resolve(newProject);\n      }, 100);\n    });\n  }\n  static async update(id, data) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const index = projects.findIndex(p => p.id === id);\n        if (index !== -1) {\n          projects[index] = {\n            ...projects[index],\n            ...data\n          };\n          resolve(projects[index]);\n        } else {\n          throw new Error('Project not found');\n        }\n      }, 100);\n    });\n  }\n  static async delete(id) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const index = projects.findIndex(p => p.id === id);\n        if (index !== -1) {\n          projects.splice(index, 1);\n          resolve();\n        } else {\n          throw new Error('Project not found');\n        }\n      }, 100);\n    });\n  }\n}\nexport default Project;","map":{"version":3,"names":["projects","id","name","description","technologies","link","github","image_url","featured","start_date","end_date","team_size","role","achievements","Project","list","orderBy","Promise","resolve","setTimeout","sorted","sort","a","b","Date","create","data","newProject","length","push","update","index","findIndex","p","Error","delete","splice"],"sources":["/Users/lt/ai trae/person/src/entities/project.js"],"sourcesContent":["const projects = [\n  {\n    id: 1,\n    name: '电商平台前端重构',\n    description: '负责公司核心电商平台的前端重构工作，使用React技术栈构建高性能的用户界面。',\n    technologies: ['React', 'Redux', 'Webpack', 'TailwindCSS'],\n    link: 'https://example.com/project1',\n    github: 'https://github.com/zhangsan/project1',\n    image_url: '',\n    featured: true,\n    start_date: '2023-01-01',\n    end_date: '2023-12-31',\n    team_size: 5,\n    role: '前端技术负责人',\n    achievements: [\n      '优化前端性能，页面加载速度提升40%',\n      '重构核心组件库，提高代码复用率和维护性',\n      '实现响应式设计，支持多端访问'\n    ]\n  },\n  {\n    id: 2,\n    name: '移动端管理系统',\n    description: '开发移动端管理系统，用于公司内部数据管理和业务处理。',\n    technologies: ['Vue.js', 'Vuex', 'Vant', 'Axios'],\n    link: 'https://example.com/project2',\n    github: 'https://github.com/zhangsan/project2',\n    image_url: '',\n    featured: false,\n    start_date: '2022-01-01',\n    end_date: '2022-12-31',\n    team_size: 3,\n    role: '前端开发工程师',\n    achievements: [\n      '实现核心功能模块，包括数据展示和表单处理',\n      '优化移动端用户体验，提高用户留存率20%',\n      '与后端团队紧密合作，确保数据接口稳定'\n    ]\n  }\n];\n\nclass Project {\n  static async list(orderBy = '-start_date') {\n    // 模拟异步操作\n    return new Promise(resolve => {\n      setTimeout(() => {\n        // 简单排序实现\n        const sorted = [...projects].sort((a, b) => {\n          if (orderBy === '-start_date') {\n            return new Date(b.start_date) - new Date(a.start_date);\n          }\n          return 0;\n        });\n        resolve(sorted);\n      }, 100);\n    });\n  }\n\n  static async create(data) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const newProject = {\n          ...data,\n          id: projects.length + 1\n        };\n        projects.push(newProject);\n        resolve(newProject);\n      }, 100);\n    });\n  }\n\n  static async update(id, data) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const index = projects.findIndex(p => p.id === id);\n        if (index !== -1) {\n          projects[index] = { ...projects[index], ...data };\n          resolve(projects[index]);\n        } else {\n          throw new Error('Project not found');\n        }\n      }, 100);\n    });\n  }\n  \n  static async delete(id) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const index = projects.findIndex(p => p.id === id);\n        if (index !== -1) {\n          projects.splice(index, 1);\n          resolve();\n        } else {\n          throw new Error('Project not found');\n        }\n      }, 100);\n    });\n  }\n}\n\nexport default Project;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}